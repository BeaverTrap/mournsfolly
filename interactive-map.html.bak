<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>World Map</title>

    <!-- Leaflet CSS and JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

    <!-- Custom CSS for Quartz Theme Matching -->
    <style>
        body {
            background-color: #181818;
            color: #e0e0e0;
            font-family: "Cinzel", serif;
            margin: 0;
            padding: 0;
        }
        h1 {
            text-align: center;
            margin-top: 20px;
            color: #e0e0e0;
        }
        .map-container {
            max-width: 90%;
            margin: 20px auto;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
        }
        .legend img {
            max-width: 400px;
            border: none;
            background: transparent;
        }
        .custom-popup {
            background: #333;
            color: #fff;
            font-family: "Cinzel", serif;
            border-radius: 8px;
            border: 1px solid #00aaff;
            padding: 10px;
            width: 250px;
        }
        .custom-popup h3 {
            margin: 0;
            color: #00aaff;
        }
        .custom-popup a {
            color: #00ff00;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <h1>World Map</h1>
    <div id="campaignmap" style="height: 600px; width: 98%;"></div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const map = L.map("campaignmap", {
                crs: L.CRS.Simple,
                minZoom: -1.5,
                maxZoom: 2,
                zoomDelta: 0.5,
            });

            const bounds = [[0, 0], [1000, 2000]];
            L.imageOverlay("./static/images/worldmap.png", bounds).addTo(map);
            map.setMaxBounds(bounds);
            map.setView([600, 600], 1);

            // Layer groups
            const settlementsLayer = L.layerGroup().addTo(map);
            const smallPlacesLayer = L.layerGroup().addTo(map);
            const naturalFeaturesLayer = L.layerGroup().addTo(map);
            const caveLayer = L.layerGroup().addTo(map);
            const dungeonsLayer = L.layerGroup().addTo(map);
            const bountyLayer = L.layerGroup().addTo(map);

            // Markers
            L.marker([600, 600], { icon: settlementIcon }).addTo(settlementsLayer).bindPopup(`
                <div style="text-align: center;">
                    <a href="https://beavertrap.github.io/mournsfolly/Worldbuilding/Mournstead-Folly-Hub/Mournstead-Folly" target="_blank">
                        <strong>Mournstead Folly</strong>
                    </a>
                    <p>A serene, picturesque town beside the Kendausk River.</p>
                </div>
            `);

            L.marker([480, 740], { icon: settlementIcon }).addTo(settlementsLayer).bindPopup(`
                <div style="text-align: center;">
                    <strong>Riverstride</strong>
                    <p>A vibrant village linking inland settlements to the sea.</p>
                </div>
            `);

            // Example marker
            L.marker([540, 460], { icon: naturalFeatureIcon }).addTo(naturalFeaturesLayer).bindPopup(`
                <div style="text-align: center;">
                    <strong>Kendausk River</strong>
                    <p>A vital waterway for trade and travel.</p>
                </div>
            `);

            // Layer control
            L.control.layers(null, {
                "Settlements": settlementsLayer,
                "Small Places": smallPlacesLayer,
                "Natural Features": naturalFeaturesLayer,
                "Caves": caveLayer,
                "Dungeons": dungeonsLayer,
                "Bounties": bountyLayer,
            }).addTo(map);

            console.log("Map initialized successfully.");
        });
    </script>
</body>
</html>
